#!/usr/local/bin/perl -w

use strict;

use POSIX qw(strftime);

my $version = 1;

sub usage() {
  print STDERR "error\n";
}

my @files;
push @files, "var/lib/current-version";
push @files, "var/oxsemi/nas.ini";
push @files, "var/oxsemi/mlpath";
push @files, "var/oxsemi/network-settings";
push @files, "var/oxsemi/shares.inc";
push @files, "var/oxsemi/smb.header.conf";
push @files, "var/private/smbpasswd";
push @files, "var/private/lighttpd.htdigest.user";
push @files, "etc/passwd";
push @files, "etc/group";
push @files, "etc/shadow";
push @files, "etc/ntp.conf";
push @files, "top";
push @files, "var/oxsemi/proftpd.sqlite3.dump";	### created on the fly below
my $files = join(" ",@files);

sub is_clean($) {
  my ($comment) = @_;
  return 0 if $comment =~/\t/;
  return 0 if $comment =~/\n/;
  return 1;
}

sub is_an_archive_file($$) {
  my ($disk,$id) = @_;
  return -e "$disk/opt/backups/$id.tar.gz";
}

sub is_a_potential_archive_disk($) {
  my ($disk) = @_;
  return 1 if $disk =~ m,/shares/external/[^/]+,;
  ###	return 1 if $disk =~ m,/tmp,;
  return 0;
}

sub is_an_actual_archive_disk($) {
  my ($disk) = @_;
  return 0 unless is_a_potential_archive_disk($disk);
  return -e "$disk/opt/backups/INDEX";
}

sub tsi_init($) {
  my ($disk) = @_;
  system "mkdir -p $disk/opt/backups"; exit $? if $? != 0;
  system "echo $version > $disk/opt/backups/INDEX"; exit $? if $? != 0;
}

sub tsi_list($) {
  my ($disk) = @_;
  system "tail -n +2 $disk/opt/backups/INDEX"; exit $? if $? != 0;
}

sub tsi_backup($$) {
  my ($disk,$comment) = @_;
  my $id = strftime "%Y%m%d-%H%M%S", localtime;
  my $version = `cut -f 1 -d " " /var/lib/current-version`;
  chomp ($version);
  system "sqlite3 /var/oxsemi/proftpd.sqlite3 .dump >  /var/oxsemi/proftpd.sqlite3.dump"; exit $? if $? != 0;
  system "tar c --ignore-failed-read -C / -f $disk/opt/backups/$id.tar.gz $files"; exit $? if $? != 0;
  system "echo -e '$id\t$version\t$comment' >> $disk/opt/backups/INDEX"; exit $? if $? != 0;
}

sub tsi_delete($$) {
  my ($disk,$id) = @_;
  system "rm $disk/opt/backups/$id.tar.gz "; exit $? if $? != 0;
  system "sed -i '/^$id\t/d' $disk/opt/backups/INDEX";
}

sub tsi_restore($$) {
  my ($disk,$id) = @_;
  #        system "/etc/init.d/network_servers.sh stop";
  #        system "/etc/init.d/mlnet.sh resetpw";
  #        system "/etc/init.d/mlnet.sh stop";
  system "rm -rf /tmp/restores";
  system "mkdir /tmp/restores";
  system "tar x -C /tmp/restores -f $disk/opt/backups/$id.tar.gz";
  my $previous_version = `cut -f 1 -d " " /tmp/restores/var/lib/current-version`;
  chomp ($previous_version);
  if ($previous_version eq "") {
    $previous_version = "v58";
  }
  my $current_version = `cut -f 1 -d " " /var/lib/current-version`;
  chomp ($current_version);

  ###
  ### the following files haven't changed
  ###
  # ignore "var/lib/current-version";
  rename "/tmp/restores/var/oxsemi/nas.ini", "/var/oxsemi/nas.ini";
  rename "/tmp/restores/var/oxsemi/mlpath", "/var/oxsemi/mlpath";
  rename "/tmp/restores/var/oxsemi/network-settings", "/var/oxsemi/network-settings";
  rename "/tmp/restores/var/oxsemi/shares.inc", "/var/oxsemi/shares.inc";
  rename "/tmp/restores/var/private/smbpasswd", "/var/private/smbpasswd";
  rename "/tmp/restores/var/private/lighttpd.htdigest.user", "/var/private/lighttpd.htdigest.user";
  rename "/tmp/restores/etc/group", "/etc/group";
  rename "/tmp/restores/etc/shadow", "/etc/shadow";
  # "var/oxsemi/smb.header.conf"
  # "etc/passwd"
  # "etc/ntp.conf" (not backed up until v97awd)
  # "top"
  # "var/oxsemi/proftpd.sqlite3.dump"

  ###################################################################################################################################################
  ### epoch 0 -> epoch 3
  ###################################################################################################################################################
  if (grep { $previous_version eq $_ } qw(v58)) {
    system "egrep '^server string=|^workgroup=|^interfaces=' /etc/smb.conf > /tmp/restores/var/oxsemi/smb.header.conf";
    # ignore old /etc/smb.conf
    mkdir "/top";
    my @smbusers = qw();
    open(SPW, "< /var/private/smbpasswd");
    while (<SPW>) {
      my ($uname) = split(/:/);
      mkdir "/top/$uname";
      push (@smbusers, $uname);
    }
    close(SPW);
    open(OPW, "< /tmp/restores/etc/passwd");
    open(NPW, "> /etc/passwd");
    while (<OPW>) {
      chomp;
      ### foo:x:1002:33:Linux User,,,:/home/foo:/bin/sh
      my ($ouser,$opwd,$ouid,$ogid,$ogecos,$ohome,$oshell) = split(/:/);
      if (grep { $ouser eq $_ } @smbusers) {
	$ogid = 33;
      }
      printf NPW "%s:%s:%s:%s:%s:%s:%s\n",$ouser,$opwd,$ouid,$ogid,$ogecos,$ohome,$oshell
    }
    close(NPW);
    close(OPW);
    ### /var/oxsemi/proftpd.sqlite3 created on the fly at boot-time, but maybe not soon enough
    system "chown www-data /var/oxsemi/proftpd.*"; 
    system "sudo -u www-data /usr/www/nbin/ftpacl.pl init";
    system "sudo -u www-data /usr/www/nbin/ftpacl.pl add_user www-data";
    system "sudo -u www-data /usr/www/nbin/ftpacl.pl repopulate";
  ###################################################################################################################################################
  ### epoch 1 -> epoch 3
  ###################################################################################################################################################
  } elsif (grep { $previous_version eq $_ } qw(v79a v87a)) {
    rename "/tmp/restores/var/oxsemi/smb.header.conf", "/var/oxsemi/smb.header.conf";
    system "rm -rf /top";
    rename "/tmp/restores/top", "/top";	### directory move is supposed to work on linux
    my @smbusers = qw();
    open(SPW, "< /var/private/smbpasswd");
    while (<SPW>) {
      my ($uname) = split(/:/);
      push (@smbusers, $uname);
      system "delgroup $uname www-data";
    }
    close(SPW);
    open(OPW, "< /tmp/restores/etc/passwd");
    open(NPW, "> /etc/passwd");
    while (<OPW>) {
      chomp;
      ### foo:x:1002:33:Linux User,,,:/home/foo:/bin/sh
      my ($ouser,$opwd,$ouid,$ogid,$ogecos,$ohome,$oshell) = split(/:/);
      if (grep { $ouser eq $_ } @smbusers) {
	$ogid = 33;
      }
      printf NPW "%s:%s:%s:%s:%s:%s:%s\n",$ouser,$opwd,$ouid,$ogid,$ogecos,$ohome,$oshell
    }
    close(NPW);
    close(OPW);
    system "rm -rf /var/oxsemi/proftpd-old.sqlite3 /var/oxsemi/proftpd.sqlite3";
    system "sudo -u www-data sqlite3 /tmp/restores/var/oxsemi/proftpd-old.sqlite3 < /tmp/restores/var/oxsemi/proftpd.sqlite3.dump";
    system "sudo -u www-data /usr/www/nbin/ftpacl.pl init";
    system "sudo -u www-data /usr/www/nbin/ftpacl.pl upgrade_from_epoch 1 /tmp/restores/var/oxsemi/proftpd-old.sqlite3";
  ###################################################################################################################################################
  ### epoch 2 -> epoch 3
  ###################################################################################################################################################
  } elsif (grep { $previous_version eq $_ } qw(v88a v88g)) {
    rename "/tmp/restores/etc/passwd", "/etc/passwd";
    rename "/tmp/restores/var/oxsemi/smb.header.conf", "/var/oxsemi/smb.header.conf";
    system "rm -rf /top";
    rename "/tmp/restores/top", "/top";	### directory move is supposed to work on linux
    system "rm -rf /var/oxsemi/proftpd-old.sqlite3 /var/oxsemi/proftpd.sqlite3";
    system "sudo -u www-data sqlite3 /tmp/restores/var/oxsemi/proftpd2-old.sqlite3 < /tmp/restores/var/oxsemi/proftpd.sqlite3.dump";
    system "sudo -u www-data /usr/www/nbin/ftpacl.pl init";
    system "sudo -u www-data /usr/www/nbin/ftpacl.pl upgrade_from_epoch 2 /tmp/restores/var/oxsemi/proftpd-old.sqlite3";
  ###################################################################################################################################################
  ### epoch 3 -> epoch 3
  ###################################################################################################################################################
  } elsif (grep { $previous_version eq $_ } qw(v98a v98g)) {
    rename "/tmp/restores/etc/ntp.conf", "/etc/ntp.conf";
    rename "/tmp/restores/etc/passwd", "/etc/passwd";
    rename "/tmp/restores/var/oxsemi/smb.header.conf", "/var/oxsemi/smb.header.conf";
    system "rm -rf /top";
    rename "/tmp/restores/top", "/top";	### directory move is supposed to work on linux
    system "rm -rf /var/oxsemi/proftpd.sqlite3";
    system "sudo -u www-data sqlite3 /var/oxsemi/proftpd.sqlite3 < /tmp/restores/var/oxsemi/proftpd.sqlite3.dump"; exit $? if $? != 0;
  }
  ### system "rm /tmp/restores";
  ### system "/etc/init.d/network_servers.sh start";
  ### system "reboot";
}

if (@ARGV == 2 && is_a_potential_archive_disk($ARGV[0]) && ! is_an_actual_archive_disk($ARGV[0]) && $ARGV[1] eq "init") {
  tsi_init($ARGV[0]);
} elsif (@ARGV == 2 && is_an_actual_archive_disk($ARGV[0]) && $ARGV[1] eq "list") {
  tsi_list($ARGV[0]);
} elsif (@ARGV == 3 && is_an_actual_archive_disk($ARGV[0]) && $ARGV[1] eq "backup" && is_clean($ARGV[2])) {
  tsi_backup($ARGV[0],$ARGV[2]);
} elsif (@ARGV == 3 && is_an_actual_archive_disk($ARGV[0]) && $ARGV[1] eq "delete" && is_an_archive_file($ARGV[0],$ARGV[2])) {
  tsi_delete($ARGV[0],$ARGV[2]);
} elsif (@ARGV == 3 && is_an_actual_archive_disk($ARGV[0]) && $ARGV[1] eq "restore" && is_an_archive_file($ARGV[0],$ARGV[2])) {
  tsi_restore($ARGV[0], $ARGV[2]);
} else {
  usage();
  exit 1;
}
exit 0;
